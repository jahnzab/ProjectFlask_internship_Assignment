# ============================================================================
# Multimodal Psychodermatological Disorder Detection
# Requirements for Python 3.10
# ============================================================================

# Core Deep Learning Frameworks
# ============================================================================
tensorflow==2.17.0

numpy==1.26


# Alternative for GPU (uncomment if you have NVIDIA GPU with CUDA 11.8)
# tensorflow-gpu==2.17.0

# Data Processing & Scientific Computing
# ===========================================================================
pandas==2.2.2
scikit-learn==1.5
scipy==1.11.4

# Image Processing
# ============================================================================
opencv-python==4.8.1.78
opencv-contrib-python==4.8.1.78
Pillow==10.1.0
imageio==2.33.0
scikit-image==0.22.0

# Advanced Data Augmentation
# ============================================================================
albumentations==1.3.1
imgaug==0.4.0

# Natural Language Processing
# ============================================================================
nltk==3.8.1
regex==2023.10.3

# Visualization
# ============================================================================
matplotlib==3.7.4
seaborn==0.13.0
plotly==5.18.0

# Progress Bars & Utilities
# ============================================================================
tqdm==4.66.1
colorama==0.4.6

# Google Gemini API
# ============================================================================
google-generativeai==0.3.2
google-api-python-client==2.108.0
google-auth==2.25.2
google-auth-oauthlib==1.2.0
google-auth-httplib2==0.2.0

# Web Framework (Flask)
# ============================================================================
Flask==3.0.0
Flask-CORS==4.0.0
Werkzeug==3.0.1
Jinja2==3.1.2
MarkupSafe==2.1.3
itsdangerous==2.1.2
click==8.1.7

# File Handling
# ============================================================================
h5py==3.10.0
pyarrow==14.0.1

# Configuration & Environment
# ============================================================================
python-dotenv==1.0.0
PyYAML==6.0.1
configparser==6.0.0

# HTTP Requests
# ============================================================================
requests==2.31.0
urllib3==2.1.0
certifi==2023.11.17

# Date & Time
# ============================================================================
python-dateutil==2.8.2

# Job Scheduling (Optional)
# ============================================================================
APScheduler==3.10.4

# Monitoring & Logging
# ============================================================================
tensorboard==2.17.0
tensorboard-data-server==0.7.2

# Model Explainability (Optional)
# ============================================================================
#shap==0.44.0
#lime==0.2.0.1

# Testing (Optional)
# ============================================================================
pytest==7.4.3
pytest-cov==4.1.0
pytest-mock==3.12.0

# Jupyter Notebook Support (Optional)
# ============================================================================


# Deployment (Optional)
# ============================================================================
gunicorn==21.2.0
waitress==2.1.2

# Data Validation (Optional)
# ============================================================================
jsonschema==4.20.0

# Caching (Optional)
# ============================================================================
joblib==1.3.2

# Additional Utilities
# ============================================================================
six==1.16.0
wrapt==1.16.0
protobuf==4.23.4
absl-py==2.0.0
astunparse==1.6.3
cachetools==5.3.2
charset-normalizer==3.3.2
flatbuffers>=24.3.25,<25
gast==0.4.0
grpcio==1.60.0
idna==3.6
packaging==23.2
opt-einsum==3.3.0
termcolor==2.4.0
typing_extensions==4.9.0
wheel==0.42.0

# Security Updates
# ============================================================================
cryptography==41.0.7

# Memory Management (Optional - helps with large datasets)
# ============================================================================
psutil==5.9.6

# Data Format Support
# ============================================================================
openpyxl==3.1.2
xlrd==2.0.1

# Additional ML Tools (Optional)
# ============================================================================
xgboost==2.0.3
lightgbm==4.1.0

# ============================================================================
# INSTALLATION INSTRUCTIONS
# ============================================================================
#
# 1. Create virtual environment (recommended):
#    python3.10 -m venv venv
#    source venv/bin/activate  # On Windows: venv\Scripts\activate
#
# 2. Install requirements:
#    pip install --upgrade pip
#    pip install -r requirements.txt
#
# 3. Download NLTK data:
#    python -c "import nltk; nltk.download('stopwords'); nltk.download('wordnet'); nltk.download('omw-1.4')"
#
# 4. Verify installation:
#    python -c "import tensorflow as tf; print('TF Version:', tf.__version__); print('GPU:', tf.config.list_physical_devices('GPU'))"
#
# ============================================================================
# NOTES
# ============================================================================
#
# - For GPU support, ensure CUDA 11.8 and cuDNN 8.6 are installed
# - On macOS with M1/M2 chips, use: tensorflow-macos==2.13.0
# - For Windows, you may need Microsoft Visual C++ 14.0 or greater
# - Minimum RAM: 8GB (16GB recommended for training)
# - Disk Space: ~5GB for packages + dataset space
#
# ============================================================================
# MINIMAL INSTALLATION (Training Only)
# ============================================================================
#
# If you want minimal installation for training only, install these:
# tensorflow==2.13.0
# numpy==1.23.5
# pandas==2.0.3
# scikit-learn==1.3.2
# opencv-python==4.8.1.78
# nltk==3.8.1
# matplotlib==3.7.4
# seaborn==0.13.0
# tqdm==4.66.1
# google-generativeai==0.3.2
# h5py==3.10.0
#
# ============================================================================
# GOOGLE COLAB
# ============================================================================
#
# Most packages are pre-installed in Colab. Only install:
# !pip install google-generativeai opencv-python-headless
#
# ============================================================================
# TROUBLESHOOTING
# ============================================================================
#
# 1. If TensorFlow installation fails:
#    pip install tensorflow==2.13.0 --no-cache-dir
#
# 2. If OpenCV conflicts occur:
#    pip uninstall opencv-python opencv-contrib-python
#    pip install opencv-python==4.8.1.78
#
# 3. If memory issues during installation:
#    pip install --no-cache-dir -r requirements.txt
#
# 4. For Apple Silicon (M1/M2):
#    pip install tensorflow-macos==2.13.0
#    pip install tensorflow-metal==1.0.0
#
# ============================================================================
